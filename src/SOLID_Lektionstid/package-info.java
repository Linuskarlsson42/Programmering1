/**
 * S - Single responsibility principle: Klasser ska bara ansvara för en sak, metoder ska också bara göra en sak. 
 * O - Open closed principle:  
 * L
 * I
 * D 
 * 
 * Interface - Abstract: Abstract klass kan innehålla abstracta metoder, vanliga metoder och properties.
 * Ett interface intehåller enbart abstracta saker, kan inte innehålla datan. Tar de gemensamma egenskaperna
 * 
 * Ex. Ett interface med både djur och bilar kan ha abstracta klasser som
 * Abstract TopSpeed();
 * Abstract Sound();
 * Abstract Acceleration();
 * Abstract Range(); o.s.v
 * 
 * Mer typiska exempel är saker som; abstract colneable();, abstract moveable(); m.m. 
 * 
 * För abstracta klasser använder man sig av Abstract Extends. 
 * För interface Använder man sig av Interface implements.
 * 
 * 
 */
/**
 * @author Linus
 *
 */
package SOLID_Lektionstid;